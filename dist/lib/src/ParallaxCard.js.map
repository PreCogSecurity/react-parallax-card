{"version":3,"sources":["../../../src/ParallaxCard.js"],"names":["ParallaxCard","props","state","width","height","scale","rotateX","rotateY","angle","shineMidpointAlpha","_element","undefined","clientWidth","offsetWidth","scrollWidth","clientHeight","offsetHeight","scrollHeight","setState","addEventListener","e","preventDefault","document","body","scrollTop","scrollLeft","getBoundingClientRect","top","left","pageX","pageY","offsetX","offsetY","comX","comY","Math","atan2","PI","style","className","children","enableRotate","label","hideLabel","rest","containerStyle","willChange","transform","shineStyle","backgroundImage","ref","propTypes","object","string","bool","node","isRequired","defaultProps"],"mappings":"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","file":"ParallaxCard.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport classNames from 'classnames'\nimport './ParallaxCard.css'\n\nclass ParallaxCard extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      width: -1,\n      height: -1,\n      scale: 1,\n      rotateX: 0,\n      rotateY: 0,\n      angle: 135,\n      shineMidpointAlpha: 0\n    }\n    this._element = undefined // ref\n  }\n\n  componentDidMount () {\n    // TODO: update these on resize\n    const width = this._element.clientWidth || this._element.offsetWidth || this._element.scrollWidth\n    const height = this._element.clientHeight || this._element.offsetHeight || this._element.scrollHeight\n    this.setState({ width, height })\n\n    // Rotate the card when the cursor interacts with it\n    // TODO: mobile\n    // TODO: debounce event handler\n    this._element.addEventListener('mousemove', (e) => {\n      e.preventDefault()\n      // algo shoutout https://github.com/drewwilson/atvImg/blob/master/atvImg.js\n      const { width, height } = this.state\n      const { scrollTop, scrollLeft } = document.body\n      const { top, left } = this._element.getBoundingClientRect()\n      const { pageX, pageY } = e\n      const offsetX = 0.52 - (pageX - left - scrollTop) / width\n      const offsetY = 0.52 - (pageY - top - scrollLeft) / height\n      const comX = (pageX - left - scrollLeft) - width / 2\n      const comY = (pageY - top - scrollTop) - height / 2\n      const rotateX = (comY - offsetY) * (0.10 * (320 / width))\n      const rotateY = (offsetX - comX) * (0.07 * (320 / width))\n      const scale = 1.07\n      const angle = Math.atan2(comY, comX) * (180 / Math.PI) - 90\n      const shineMidpointAlpha = (pageY - top - scrollTop) / height * 0.4\n      this.setState({ rotateX, rotateY, scale, angle, shineMidpointAlpha })\n      // console.log(angle)\n    })\n\n    // Reset the card when the cursor leaves\n    this._element.addEventListener('mouseleave', (e) => this.setState({ rotateX: 0, rotateY: 0, scale: 1, angle: 135, shineMidpointAlpha: 0 }))\n  }\n\n  render () {\n    const { style, className, children, enableRotate = true, label, hideLabel, ...rest } = this.props\n\n    const containerStyle = {\n      willChange: 'transform',\n      transform: `rotateX(${enableRotate && this.state.rotateX}deg)\n                  rotateY(${enableRotate && this.state.rotateY}deg)\n                  scale3d(${this.state.scale}, ${this.state.scale}, ${this.state.scale})`\n    }\n    const shineStyle = {\n      willChange: 'background',\n      backgroundImage: enableRotate\n        ? `linear-gradient(${this.state.angle}deg,\n                           rgba(255, 255, 255, ${this.state.shineMidpointAlpha}) 0%,\n                           rgba(255,255,255,0) 80%)`\n        : ''\n    }\n\n    return (\n      <div\n        style={style}\n        ref={(ref) => { this._element = ref }}\n        className={classNames('ParallaxCard', className)}\n        {...rest}>\n        <div className='ParallaxCard-container' style={containerStyle}>\n          <div className='ParallaxCard-shadow' />\n          <div className='ParallaxCard-layers'>\n            {children}\n          </div>\n          {enableRotate && <div className='ParallaxCard-shine' style={shineStyle} />}\n        </div>\n        {label && !hideLabel && <div className='ParallaxCard-label'>{label}</div>}\n      </div>\n    )\n  }\n}\n\nParallaxCard.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  hideLabel: PropTypes.bool,\n  enableRotate: PropTypes.bool,\n  children: PropTypes.node.isRequired\n}\n\nParallaxCard.defaultProps = {\n  hideLabel: false,\n  children: {},\n  enableRotate: true\n}\n\nexport default ParallaxCard\n"]}